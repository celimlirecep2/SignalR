@{
    ViewData["Title"] = "Home Page";
}

@section Scripts{
    <script src="~/lib/microsoft/signalr/dist/browser/signalr.min.js"></script>
    <script type="text/javascript">

        $(document).ready(() => {

            //bağlantı oluşturulur - LogLevel.Information: information sonrası için log mesajları alınır
            //withAutomaticReconnect() - otomatik olarak bağlantı kesildiğinde yeniden bağlanmaya çalışır 4 kere dener olmassa sonlandırır[1saniye,1saniye,3saniye,10saniye]
            var connection = new signalR.HubConnectionBuilder().configureLogging(signalR.LogLevel.Error).withAutomaticReconnect([1000, 1000, 3000, 10000]).withUrl("https://localhost:7221/MyHub", {
                skipNegotiation: true,
                transport: signalR.HttpTransportType.WebSockets
            }).build();
            statusShow(1)
            SignalRConnectionStart();

            function SignalRConnectionStart() {

                //Bağlantıyı başlatır async
                connection.start().then(() => {
                    statusShow(0);

                    startListenRoom();//ilk oda açıldığında mesajları getirir
                }).catch((err) => {
                    console.log(err);
                    setTimeout(() => SignalRConnectionStart(), 2000);//2 saniye sonra eğer bağlantı gerçekleşmesse yeniden bağlantı dene bağlantı ilk açıldığında olmayabilir
                });
            }

            //bağlanıyor (start async method olduğundan önce bu gösterir)
            statusShow(1)

            //kopma durumunda yeniden bağlanmayı deniyecek
            connection.onreconnecting(err => {
                statusShow(1);
                console.log("onreconnection: " + err)
            });

            //yeniden bağlanması durumunda yapılcaklar
            connection.onreconnected(() => {
                statusShow(0);
            });

            //bağlantı sonlandırılması durumunda yapılaklar
            connection.onclose(() => {
                statusShow(0);
                SignalRConnectionStart();
            })

            //click mesaj gönder
            //MyHub içerisindeki fonksiyonların çalıştırılması sağlanmış olur(invoke)
            $("#btnNameSave").click(() => {
                connection.invoke("SendName", $("#txtName").val()).catch((err) => console.log(err))
            });
           
            function startListenRoom() {
                connection.invoke("GetNames");//fonksiyonu çalıştırarak önceden yazılmış isimler varsa onları odaya getirir
                //Getirilen ilk kayıtların yazılmasını sağlar
                connection.on("ReceiveNames", (names) => {
                    $("#nameList").empty();
                    names.forEach((item, index) => {
                        $("#nameList").append(`<li class="list-group-item"> ${item} </li>`)
                    });
                });
            }
             //on method hangi odaya bağlanıcağımızı söylemiş olduk odayı dinler
            //odaya sonradan eklenen kayıtları döner
            connection.on("ReceiveName", (name) => {
                $("#nameList").append(`<li class="list-group-item"> ${name} </li>`)
            });

            //kullanıcı sayısı için açılan oda
            connection.on("ReceiveClientCount", (clientCount) => {
                $("#clientCount").text(clientCount);
            });
            //postman üzerinden api tarafında notificationcontroller
            connection.on("Notify", (teamCount) => {
                $("#notify").html(` <div class='alert alert-success'>${teamCount}</div>`)
            });

            connection.on("Error", (err) => {
                alert(err);
            })

            function statusShow(statu) {
                switch (statu) {
                    case 0: $("#loading").hide(); break;
                    case 1: $("#loading").show(); break;
                }
                $("#conStatus").text(connection.q);
            }

        });



    </script>
}

    <div class="row">


        <span class="bg-dark text-white fst-italic position-absolute top-0 end-0 rounded-circle d-flex justify-content-center align-items-center" style="width:150px;height:150px;">
            <div>
                Aktif <br /> Katılımcı <br /> Sayısı <br /> <strong id="clientCount"></strong>
            </div>

        </span>
        <div class="col-md-8 offset-2">
            <input class="form-control" type="text" id="txtName" /> <hr />
            <button class="btn btn-primary" id="btnNameSave">İsim Kaydet</button>
            <div class="alert alert-info">
                <div class="clearfix">
                    <div class="float-start">
                        Bağlantı durumu: <strong id="conStatus"></strong>
                    </div>

                    <div class="float-end" id="loading">
                        <div class="col">
                            <strong class="text-success"><span class="fw-bolder fs-5 text-primary">B</span>ağlanıy</strong>
                            <!-- aria-hidden="true" ekran okuyucadan kaçır -->
                            <div class="spinner-border spinner-border-sm text-danger  ms-auto" role="status" aria-hidden="true">
                            </div>
                            <strong class="text-success">r<span class="text-dark">...</span></strong>
                        </div>
                    </div>
                </div>

            </div>
            <div id="notify"></div>

        </div>
    </div>

    <div class="col-md-8 offset-2">
        <ul id="nameList" class="list-group"></ul>
    </div>
